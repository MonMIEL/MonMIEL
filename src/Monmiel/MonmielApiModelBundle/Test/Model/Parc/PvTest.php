<?php
namespace Monmiel\MonmielApiModelBundle\Model\Parc;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-03-12 at 15:25:35.
 */
class PvTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Pv
     */
    protected $pv;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->pv = new Pv;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @test
     */
    public function testAvalaibilityRatePv(){
        $this->pv = new Pv(0,60,0,75,5000,1);
        $this->pv->setAvailabilityRate(0.85);
        $exceptedValue = 0.85;
        $result = $this->pv->getAvailabilityRate();
        assertThat($result,is($exceptedValue));
    }

    /**
     * @test
     */
    public function testLoadFactorPv(){
        $this->pv = new Pv(0,60,0,75,5000,1);
        $this->pv->setLoadFactor(0.75);
        $exceptedValue = 0.75;
        $result = $this->pv->getLoadFactor();
        assertThat($result,is($exceptedValue));
    }

    /**
     * @test
     */
    public function testPowerUnitPv(){
        $this->pv = new Pv(0,60,0,75,5000,1);
        $this->pv->setLoadFactor(0.75);
        $this->pv->setAvailabilityRate(0.60);
        $exceptedValue = 0.001;
        $result = $this->pv->getPowerUnit();
        assertThat($result,is($exceptedValue));
    }

    /**
     * @test
     */
    public function testPowerPv(){
        $this->pv = new Pv(0,60,0,75,5000,1);
        $this->pv->setLoadFactor(0.75);
        $this->pv->setAvailabilityRate(0.60);
        $this->pv->setPower(5000);
        $exceptedValue = 4000;
        $result = intval($this->pv->getPower());
        assertThat($result,is($exceptedValue));
    }
}
